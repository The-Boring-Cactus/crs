//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/peyote/Documents/GitHub/crs/FunctEngine/FunctEngine.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace FunctEngine {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="FunctEngineParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IFunctEngineVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] FunctEngineParser.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] FunctEngineParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] FunctEngineParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] FunctEngineParser.VariableDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] FunctEngineParser.AssignmentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] FunctEngineParser.ForStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.forInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInit([NotNull] FunctEngineParser.ForInitContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.forUpdate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForUpdate([NotNull] FunctEngineParser.ForUpdateContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] FunctEngineParser.WhileStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] FunctEngineParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.orExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpression([NotNull] FunctEngineParser.OrExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpression([NotNull] FunctEngineParser.AndExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.comparisonExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonExpression([NotNull] FunctEngineParser.ComparisonExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.addSubExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddSubExpression([NotNull] FunctEngineParser.AddSubExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.multDivExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultDivExpression([NotNull] FunctEngineParser.MultDivExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtom([NotNull] FunctEngineParser.AtomContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] FunctEngineParser.FunctionCallContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentList([NotNull] FunctEngineParser.ArgumentListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] FunctEngineParser.LiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FunctEngineParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayLiteral([NotNull] FunctEngineParser.ArrayLiteralContext context);
}
} // namespace FunctEngine
